var redis = require("redis"),
	client = redis.createClient();

client.on("error", function (err) {
	console.log("Error " + err);
});

// taken from http://stackoverflow.com/questions/784012/javascript-equivalent-of-phps-in-array on 20150518 @ 19:50 EST
function inArray(needle, haystack) {
    var length = haystack.length;
    for(var i = 0; i < length; i++) {
        if(haystack[i] == needle) return true;
    }
    return false;
}

function showlist (listname) {
	client.get (listname, function (err, reply) {
		if (reply != null) {
			var list = JSON.parse(reply.toString());
			
			for (i = 0; i < list.length; i++) {
				console.log (list[i]);
			}
		} else {
			console.log ("no " + listname + " found");
		}

		client.quit();
	});
}

function addToList (listname, itemToAdd) {
	client.get (listname, function (err, reply) {
		if (reply != null) {
			list = JSON.parse(reply.toString());

			if (!inArray (itemToAdd, list)) {
				console.log ("adding " + itemToAdd + " to " + listname);
				list.push (itemToAdd);
				client.set (listname, JSON.stringify (list), function (err, reply) {
					client.quit();
				});
			} else {
				console.log ("item already on " + listname);
				client.quit();
			}
		} else {
			console.log ("adding first item " + itemToAdd + " to " + listname);
			client.set (listname, JSON.stringify ([itemToAdd]), function (err, reply) {
				client.quit();
			});
		}
	});
}

function removeFromlist (listname, itemToRemove) {
	client.get (listname, function (err, reply) {
		if (reply != null) {
			list = JSON.parse(reply.toString());

			if (inArray (itemToRemove, list)) {
				console.log ("removing " + itemToRemove + " from " + listname);

				list.splice (list.indexOf(itemToRemove), 1);
				
				client.set (listname, JSON.stringify (list), function (err, reply) {
					client.quit();
				});

				client.quit();
			} else {
				console.log ("item not found in " + listname);
				client.quit();
			}
		} else {
			console.log ("error");
		}
	});
}

process.argv.forEach(function (val, index, array) {
	if (val == "--show") {
		var listArgument = array[index + 1];

		switch (listArgument) {
			case 'watchlist':	showlist ('watchlist');
								break;
			case 'emaillist':	showlist ('emaillist');
								break;
			default: 			console.log ("--show { watchlist | emaillist }");
								client.quit();
		}
	} else if (val == "--add") {
		var listArgument = array[index + 1];
		var itemToAdd = array[index + 2];

		switch (listArgument) {
			case 'watchlist':	addToList ('watchlist', itemToAdd);
								break;
			case 'emaillist':	addToList ('emaillist', itemToAdd);
								break;
			default: 			console.log ("--add { watchlist | emaillist }");
								client.quit();
		}
	} else if (val == "--remove") {
		var listArgument = array[index + 1];
		var itemToRemove = array[index + 2];

		switch (listArgument) {
			case 'watchlist':	removeFromlist ('watchlist', itemToRemove);
								break;
			case 'emaillist':	removeFromlist ('emaillist', itemToRemove);
								break;
			default: 			console.log ("--remove { watchlist | emaillist }");
								client.quit();
		}
		
	}
});